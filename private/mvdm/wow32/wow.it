# wow.it read by genwowit.exe to generate wowit.c and wowit.h
#
# The syntax is very restricted, # begins comment lines and the
# the first two lines define allowable types.
#
# Note that you should keep these declarations in the same
# order as the InterpretThunk's switch statement for best code
# generation.
#
Argument Types: WORD, INT, DWORD, LPDWORD, PTR, PTRORATOM, HGDI, HUSER, COLOR, HINST, HICON, HCURS, 16ONLY, 32ONLY;
Return Types: DWORD, WORD, INT, HGDI, HUSER, ZERO, HICON, HCURS, ONE, HPRNDWP;
#
DWORD RegQueryValueEx(DWORD, PTR, LPDWORD, LPDWORD, PTR, LPDWORD);
DWORD RegQueryValue(DWORD, PTR, PTR, LPDWORD);
DWORD RegOpenKey(DWORD, PTR, LPDWORD);
DWORD RegEnumKey(DWORD, DWORD, PTR, DWORD);
DWORD RegEnumValue(DWORD, DWORD, PTR, LPDWORD, LPDWORD, LPDWORD, PTR, LPDWORD);
DWORD RegCloseKey(DWORD);
DWORD RegCreateKey(DWORD, PTR, LPDWORD);
DWORD RegDeleteKey=WOWRegDeleteKey(DWORD, PTR);
DWORD RegSetValue(DWORD, PTR, DWORD, PTR, DWORD);
DWORD RegSetValueEx(DWORD, PTR, DWORD, DWORD, PTR, DWORD);
DWORD RegDeleteValue(DWORD, PTR);
DWORD RegFlushKey(DWORD);
HGDI  SelectObject(HGDI, HGDI);
WORD  PatBlt(HGDI, INT, INT, INT, INT, DWORD);
WORD  EnableMenuItem(HUSER, WORD, WORD);
DWORD SetBkColor(HGDI, COLOR);
INT   SetBkMode(HGDI, INT);
DWORD SetTextColor(HGDI, COLOR);
WORD  GetMenuItemID(HUSER, INT);
HUSER GetSubMenu(HUSER, INT);
WORD  GetMenuState(HUSER, WORD, WORD);
HUSER GetParent(HUSER);
HUSER GetWindow(HUSER, WORD);
WORD  LineTo(HGDI, INT, INT);
INT   GetClassName(HUSER, PTR, INT);
WORD  IsWindowVisible(HUSER);
INT   CombineRgn(HGDI, HGDI, HGDI, INT);
ZERO  SetRectRgn(HGDI, INT, INT, INT, INT);
INT   SelectClipRgn(HGDI, HGDI);
INT   GetAsyncKeyState(INT);
DWORD RegLoadKey(DWORD, PTR, PTR);
DWORD RegUnLoadKey(DWORD, PTR);
DWORD RegSaveKey(DWORD, PTR, PTR);
WORD  SetTextAlign(HGDI, WORD);
WORD  GetProp(HUSER, PTRORATOM);
WORD  SetProp(HUSER, PTRORATOM, WORD);
DWORD AnsiToOem(PTR, PTR);
DWORD OemToAnsi(PTR, PTR);
HGDI  CreateSolidBrush(COLOR);
DWORD GetPrivateProfileSectionNames(PTR, WORD, PTR);
DWORD CreateDirectory(PTR, PTR);
DWORD RemoveDirectory(PTR);
DWORD DeleteFile(PTR);
DWORD SetLastError(DWORD);
DWORD GetLastError();
DWORD WritePrivateProfileStruct(PTR, PTR, PTR, WORD, PTR);
DWORD GetPrivateProfileStruct(PTR, PTR, PTR, WORD, PTR);
DWORD GetCurrentDirectory(DWORD, PTR);
DWORD SetCurrentDirectory(PTR);
DWORD WritePrivateProfileSection(PTR, PTR, PTR);
DWORD WriteProfileSection(PTR, PTR);
DWORD GetPrivateProfileSection(PTR, PTR, DWORD, PTR);
DWORD GetProfileSection(PTR, PTR, DWORD);
DWORD GetFileAttributes(PTR);
DWORD SetFileAttributes(PTR, DWORD);
DWORD GetDiskFreeSpace(PTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
DWORD FileTimeToLocalFileTime(PTR, PTR);
DWORD AbortPath(HGDI);
DWORD BeginPath(HGDI);
DWORD EndPath(HGDI);
DWORD FillPath(HGDI);
DWORD FlattenPath(HGDI);
DWORD GetPath(HGDI, PTR, PTR, DWORD);
HGDI  PathToRegion(HGDI);
DWORD SelectClipPath(HGDI, INT);
DWORD StrokeAndFillPath(HGDI);
DWORD StrokePath(HGDI);
DWORD WidenPath(HGDI);
DWORD CloseFigure(HGDI);
HGDI  CloseEnhMetaFile(HGDI);
HGDI  CopyEnhMetaFile(HGDI, PTR);
DWORD DeleteEnhMetaFile(HGDI);
HGDI  GetEnhMetaFile(PTR);
DWORD GetEnhMetaFileBits(HGDI, DWORD, PTR);
DWORD GetEnhMetaFileDescription(HGDI, DWORD, PTR);
DWORD GetEnhMetaFileHeader(HGDI, DWORD, PTR);
DWORD GetEnhMetaFilePaletteEntries(HGDI, DWORD, PTR);
DWORD PlayEnhMetaFileRecord(HGDI, PTR, PTR, DWORD);
HGDI  SetEnhMetaFileBits(DWORD, PTR);
DWORD GdiComment(HGDI, DWORD, PTR);
INT   SetMetaRgn(HGDI);
INT   ExtSelectClipRgn(HGDI, HGDI, INT);
HGDI  CreateHalftonePalette(HGDI);
HGDI  ExtCreateRegion(PTR, DWORD, PTR);
DWORD ExtCreatePen(DWORD, DWORD, PTR, DWORD, DWORD);
INT   GetArcDirection(HGDI);
DWORD GetFontLanguageInfo(HGDI);
DWORD GetMiterLimit(HGDI, LPDWORD);
DWORD SetMiterLimit(HGDI, DWORD, LPDWORD);
INT   SetArcDirection(HGDI, INT);
INT   GetRandomRgn(HGDI, HGDI, INT);
INT   GetTextCharset(HGDI);
DWORD SetMagicColors(HGDI, DWORD, WORD);
DWORD ChangeDisplaySettings(PTR, DWORD);
WORD  CheckMenuRadioItem(HUSER, WORD, WORD, WORD, WORD);
DWORD GetMenuContextHelpId(HUSER);
DWORD SetMenuContextHelpId(HUSER, DWORD);
DWORD GetMenuDefaultItem(HUSER, WORD, WORD);
DWORD SetMenuDefaultItem(HUSER, WORD, WORD);
HICON CreateIconFromResourceEx(PTR, DWORD, WORD, DWORD, WORD, WORD, WORD);
WORD  DestroyIcon32=DestroyIcon(HICON, 16ONLY);
WORD  DispatchMessage32=DispatchMessage(PTR, 16ONLY);
WORD  DrawIconEx(HGDI, INT, INT, HICON, INT, INT, WORD, HGDI, WORD);
WORD  EnumDisplaySettings(PTR, DWORD, PTR);
HUSER FindWindowEx(HUSER, HUSER, PTR, PTR);
HUSER GetForegroundWindow();
DWORD ActivateKeyboardLayout(DWORD, WORD);
DWORD GetKeyboardLayout(DWORD);
INT   GetKeyboardLayoutList(WORD, PTR);
WORD  GetKeyboardLayoutName(PTR);
DWORD LoadKeyboardLayout(PTR, WORD);
WORD  UnloadKeyboardLayout(DWORD);
DWORD GetPropEx=GetProp(HUSER, PTRORATOM);
WORD  SetPropEx=SetProp(HUSER, PTRORATOM, DWORD);
WORD  GetScrollInfo(HUSER, INT, PTR);
DWORD SetScrollInfo(HUSER, INT, PTR, WORD);
HUSER GetShellWindow();
HGDI  GetSysColorBrush(INT);
DWORD GetWindowContextHelpId(HUSER);
WORD  SetWindowContextHelpId(HUSER, DWORD);
INT   GetWindowRgn(HUSER, HGDI);
WORD  SetWindowRgn(HUSER, HGDI, WORD);
HUSER LoadImage(HINST, PTRORATOM, WORD, INT, INT, WORD);
INT   LookupIconIdFromDirectoryEx(PTR, WORD, INT, INT, WORD);
DWORD MsgWaitForMultipleObjects(DWORD, PTR, WORD, DWORD, DWORD);
DWORD RemovePropEx=RemoveProp(HUSER, PTRORATOM);
WORD  SetForegroundWindow(HUSER);
DWORD GetMessageExtraInfo();
DWORD SetMessageExtraInfo(DWORD);
WORD  EnableScrollBar(HUSER, WORD, WORD);
HCURS GetCursor();
HUSER GetOpenClipboardWindow();
WORD  IsMenu(HUSER);
WORD  LockWindowUpdate(HUSER);
DWORD GetQueueStatus(WORD);
WORD  GetInputState();
HUSER WindowFromDC(HGDI);
DWORD DragObject(HUSER, HUSER, WORD, DWORD, HCURS);
WORD  DrawIcon(HGDI, INT, INT, HICON);
INT   ExcludeUpdateRgn(HGDI, HUSER);
HUSER GetCapture();
DWORD GetVersionEx(PTR);
WORD  GetDoubleClickTime();
HUSER GetFocus();
HUSER GetLastActivePopup(HUSER);
INT   GetScrollPos(HUSER, INT);
INT   GetUpdateRgn(HUSER, HGDI, WORD);
WORD  GlobalFindAtom(PTR);
ZERO  MessageBeep(WORD);
WORD  OpenIcon(HUSER);
ZERO  ReleaseCapture();
WORD  RemoveProp(HUSER, PTRORATOM);
ZERO  SetDoubleClickTime(WORD);
HUSER SetFocus(HUSER);
DWORD SetScrollPos(HUSER, INT, INT, WORD);
ZERO  SetScrollRange(HUSER, INT, INT, INT, WORD);
ZERO  ShowOwnedPopups(HUSER, WORD);
WORD  SwapMouseButton(WORD);
DWORD GetShortPathName(PTR, PTR, WORD);
DWORD FreeLibrary32W=FreeLibrary(DWORD);
DWORD GetProcAddress32W=GetProcAddress(DWORD, PTRORATOM);
WORD  AnyPopup();
WORD  ArrangeIconicWindows(HUSER);
HPRNDWP BeginDeferWindowPos(INT);
WORD  BringWindowToTop(HUSER);
ZERO  CloseWindow(HUSER);
WORD  EnableWindow(HUSER, WORD);
WORD  FlashWindow(HUSER, WORD);
INT   GetWindowTextLength(HUSER);
HUSER SetActiveWindow(HUSER);
HUSER SetParent(HUSER, HUSER);
ZERO  ShowScrollBar(HUSER, WORD, WORD);
WORD  ShowWindow(HUSER, INT);
WORD  Arc(HGDI, INT, INT, INT, INT, INT, INT, INT, INT);
WORD  BitBlt(HGDI, INT, INT, INT, INT, HGDI, INT, INT, DWORD);
INT   GetRelAbs(HGDI, 32ONLY);
INT   SetRelAbs(HGDI, INT);
WORD  Chord(HGDI, INT, INT, INT, INT, INT, INT, INT, INT);
HGDI  CreateCompatibleBitmap(HGDI, INT, INT);
HGDI  CreateDiscardableBitmap(HGDI, INT, INT);
HGDI  CreateEllipticRgn(INT, INT, INT, INT);
HGDI  CreateHatchBrush(INT, DWORD);
HGDI  CreatePen(INT, INT, DWORD);
HGDI  CreateRectRgn(INT, INT, INT, INT);
HGDI  CreateRoundRectRgn(INT, INT, INT, INT, INT, INT);
WORD  Ellipse(HGDI, INT, INT, INT, INT);
DWORD GetRegionData(HGDI, DWORD, PTR);
WORD  EqualRgn(HGDI, HGDI);
INT   ExcludeClipRect(HGDI, INT, INT, INT, INT);
WORD  ExtFloodFill(HGDI, INT, INT, DWORD, WORD);
WORD  FillRgn(HGDI, HGDI, HGDI);
WORD  FloodFill(HGDI, INT, INT, DWORD);
WORD  FrameRgn(HGDI, HGDI, HGDI, INT, INT);
DWORD GetBitmapBits(HGDI, DWORD, PTR);
DWORD GetBkColor(HGDI);
INT   GetBkMode(HGDI);
INT   GetMapMode(HGDI);
DWORD GetNearestColor(HGDI, COLOR);
DWORD GetPixel(HGDI, INT, INT);
INT   GetPolyFillMode(HGDI);
INT   GetROP2(HGDI);
HGDI  GetStockObject(INT);
INT   GetStretchBltMode(HGDI);
INT   IntersectClipRect(HGDI, INT, INT, INT, INT);
WORD  InvertRgn(HGDI, HGDI);
INT   OffsetClipRgn(HGDI, INT, INT);
INT   OffsetRgn(HGDI, INT, INT);
WORD  PaintRgn(HGDI, HGDI);
WORD  Pie(HGDI, INT, INT, INT, INT, INT, INT, INT, INT);
WORD  PtInRegion(HGDI, INT, INT);
WORD  PtVisible(HGDI, INT, INT);
WORD  Rectangle(HGDI, INT, INT, INT, INT);
WORD  RestoreDC(HGDI, INT);
WORD  RoundRect(HGDI, INT, INT, INT, INT, INT, INT);
INT   SaveDC(HGDI);
INT   SetMapMode(HGDI, INT);
DWORD SetMapperFlags(HGDI, DWORD);
DWORD SetPixel(HGDI, INT, INT, DWORD);
INT   SetPolyFillMode(HGDI, INT);
INT   SetROP2(HGDI, INT);
INT   SetStretchBltMode(HGDI, INT);
WORD  StretchBlt(HGDI, INT, INT, INT, INT, HGDI, INT, INT, INT, INT, DWORD);
WORD  UnrealizeObject(HGDI);
HGDI  GetCurrentObject(HGDI, WORD);
ZERO  AnimatePalette(HGDI, WORD, WORD, PTR);
HGDI  CreatePalette(PTR);
WORD  GetNearestPaletteIndex(HGDI, DWORD);
WORD  GetPaletteEntries(HGDI, WORD, WORD, PTR);
WORD  GetSystemPaletteUse(HGDI);
WORD  RealizePalette(HGDI);
WORD  ResizePalette(HGDI, WORD);
HGDI  SelectPalette(HGDI, HGDI, WORD);
WORD  SetPaletteEntries(HGDI, WORD, WORD, PTR);
WORD  SetSystemPaletteUse(HGDI, WORD);
INT   UpdateColors(HGDI);
INT   StartPage(HGDI);
INT   EndPage(HGDI);
DWORD GetFontData(HGDI, DWORD, DWORD, PTR, DWORD);
WORD  IsGDIObject=GetObjectType(HGDI);
WORD  GetTextAlign(HGDI);
INT   GetTextCharacterExtra(HGDI);
INT   SetTextCharacterExtra(HGDI, INT);
DWORD GetTextColor(HGDI);
INT   GetTextFace(HGDI, INT, PTR);
INT   SetTextJustification(HGDI, INT, INT);
WORD  TextOut(HGDI, INT, INT, PTR, INT);
WORD  UnregisterClass(PTRORATOM, HINST);
#ifdef FE_SB //add GetSystemDefaultLangID()
WORD  GetSystemDefaultLangID();
#endif
